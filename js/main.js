// main.js
document.addEventListener('DOMContentLoaded', function() {
    // –≠–ª–µ–º–µ–Ω—Ç—ã DOM
    const couponCards = document.querySelector('.coupons-list');
    const topCoupons = document.querySelector('.top-coupons-scroll');
    const mainSearch = document.getElementById('main-search');
    const adminLogin = document.getElementById('admin-login');

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    init();

    function init() {
        // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        loadCoupons();
        loadTopCoupons();
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        setupEventListeners();
    }

    function setupEventListeners() {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        document.querySelectorAll('.filter-tab').forEach(tab => {
            tab.addEventListener('click', function() {
                document.querySelectorAll('.filter-tab').forEach(t => t.classList.remove('active'));
                this.classList.add('active');
                const filterType = this.getAttribute('data-filter-type');
                const activeCategory = document.querySelector('.filter-category.active').getAttribute('data-category');
                const searchTerm = mainSearch.value.toLowerCase();
                applyFilters(filterType, activeCategory, searchTerm);
            });
        });

        document.querySelectorAll('.filter-category').forEach(category => {
            category.addEventListener('click', function() {
                document.querySelectorAll('.filter-category').forEach(c => c.classList.remove('active'));
                this.classList.add('active');
                const activeType = document.querySelector('.filter-tab.active').getAttribute('data-filter-type');
                const searchTerm = mainSearch.value.toLowerCase();
                applyFilters(activeType, this.getAttribute('data-category'), searchTerm);
            });
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–∞
        mainSearch.addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase();
            const activeType = document.querySelector('.filter-tab.active').getAttribute('data-filter-type');
            const activeCategory = document.querySelector('.filter-category.active').getAttribute('data-category');
            applyFilters(activeType, activeCategory, searchTerm);
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
        document.querySelectorAll('.search-filter').forEach(filter => {
            filter.addEventListener('click', function() {
                document.querySelectorAll('.search-filter').forEach(f => f.classList.remove('active'));
                this.classList.add('active');
                const filterValue = this.getAttribute('data-filter');
                // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                document.querySelectorAll('.filter-category').forEach(category => {
                    category.classList.remove('active');
                    if (category.getAttribute('data-category') === filterValue || filterValue === 'all') {
                        category.classList.add('active');
                    }
                });
                const activeType = document.querySelector('.filter-tab.active').getAttribute('data-filter-type');
                const searchTerm = mainSearch.value.toLowerCase();
                applyFilters(activeType, filterValue, searchTerm);
            });
        });

        // –í—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω–∫—É
        adminLogin.addEventListener('click', function() {
            const password = prompt('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏:');
            if (password === 'admin') {
                // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ —Å —Ç–æ–∫–µ–Ω–æ–º
                const token = 'slonim_admin_' + Date.now();
                localStorage.setItem('admin_token', token);
                // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
                window.open('admin.html?token=' + token, '_blank');
            } else if (password !== null) {
                alert('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!');
            }
        });
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∫—É–ø–æ–Ω–æ–≤
    function loadCoupons() {
        const coupons = storage.getCoupons();
        const businesses = storage.getBusinesses();

        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫—É–ø–æ–Ω—ã
        couponCards.innerHTML = '';
        coupons.forEach(coupon => {
            const business = businesses.find(b => b.id === coupon.businessId);
            if (business) {
                const couponCard = document.createElement('div');
                couponCard.className = 'coupon-card';
                couponCard.setAttribute('data-type', coupon.type);
                couponCard.setAttribute('data-category', coupon.category);
                couponCard.setAttribute('data-coupon-id', coupon.id);

                // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É —Å–∫–∏–¥–∫–∏
                let discountIcon = 'üî•';
                if (coupon.discount.includes('%')) {
                    discountIcon = '%';
                } else if (coupon.discount.includes('–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è')) {
                    discountIcon = 'üéÅ';
                }

                // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –±–∏–∑–Ω–µ—Å–∞
                let businessType = '–ë–∏–∑–Ω–µ—Å';
                if (business.category === 'food') {
                    businessType = '–ö–∞—Ñ–µ';
                } else if (business.category === 'services') {
                    businessType = '–£—Å–ª—É–≥–∏';
                } else if (business.category === 'goods') {
                    businessType = '–ú–∞–≥–∞–∑–∏–Ω';
                } else if (business.category === 'tech') {
                    businessType = '–¢–µ—Ö–Ω–∏–∫–∞';
                }

                // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∏–ª–∏ –∫—É–ø–æ–Ω–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                const couponStyle = coupon.couponStyle || {
                    backgroundColor: '#fff8e6',
                    borderColor: '#ffd166',
                    borderStyle: 'dashed',
                    borderWidth: '2px'
                };

                couponCard.innerHTML = `
                    <div class="coupon-header">
                        <div class="coupon-logo" style="background-image: url('${business.logo}'); background-size: cover;"></div>
                        <div>
                            <div class="coupon-business">${business.name}</div>
                            <div class="coupon-type">${businessType}</div>
                        </div>
                    </div>
                    <div class="coupon-content">
                        <div class="coupon-img" style="background-image: url('${coupon.image}');"></div>
                        <h3 class="coupon-title">${coupon.title}</h3>
                        <p class="coupon-description">${coupon.description}</p>
                        <div class="coupon-discount" style="
                            background-color: ${couponStyle.backgroundColor};
                            border: ${couponStyle.borderWidth} ${couponStyle.borderStyle} ${couponStyle.borderColor};
                            border-radius: 10px;
                        ">
                            <div class="coupon-discount-icon">${discountIcon}</div>
                            <div class="coupon-discount-text">${coupon.discount}</div>
                        </div>
                        <div class="coupon-actions">
                            <button class="btn-show" data-id="${coupon.id}">–ü–æ–∫–∞–∑–∞—Ç—å –∫—É–ø–æ–Ω</button>
                            <button class="btn-save">‚òÜ</button>
                        </div>
                    </div>
                `;
                couponCards.appendChild(couponCard);
            }
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–ü–æ–∫–∞–∑–∞—Ç—å –∫—É–ø–æ–Ω"
        document.querySelectorAll('.btn-show').forEach(button => {
            button.addEventListener('click', function() {
                const couponId = this.getAttribute('data-id');
                showCouponModal(couponId);
            });
        });

        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã
        const activeType = document.querySelector('.filter-tab.active').getAttribute('data-filter-type');
        const activeCategory = document.querySelector('.filter-category.active').getAttribute('data-category');
        const searchTerm = mainSearch.value.toLowerCase();
        applyFilters(activeType, activeCategory, searchTerm);
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–ø –∫—É–ø–æ–Ω–æ–≤
    function loadTopCoupons() {
        const coupons = storage.getCoupons();
        const businesses = storage.getBusinesses();

        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ–ø –∫—É–ø–æ–Ω—ã
        const topCouponsList = coupons.filter(coupon => coupon.isTop);

        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–ø –∫—É–ø–æ–Ω—ã
        topCoupons.innerHTML = '';
        topCouponsList.forEach(coupon => {
            const business = businesses.find(b => b.id === coupon.businessId);
            if (business) {
                // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∏–ª–∏ –∫—É–ø–æ–Ω–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                const couponStyle = coupon.couponStyle || {
                    backgroundColor: '#fff8e6',
                    borderColor: '#ffd166',
                    borderStyle: 'dashed',
                    borderWidth: '2px'
                };

                const topCoupon = document.createElement('div');
                topCoupon.className = 'top-coupon';
                topCoupon.setAttribute('data-coupon-id', coupon.id);
                topCoupon.innerHTML = `
                    <div class="top-coupon-img" style="background-image: url('${coupon.image}');"></div>
                    <div class="top-coupon-content">
                        <div class="top-coupon-title">${business.name}</div>
                        <div class="top-coupon-discount" style="
                            color: ${couponStyle.borderColor};
                        ">${coupon.discount}</div>
                    </div>
                    <div class="top-coupon-top-badge">–¢–û–ü</div>
                `;
                topCoupons.appendChild(topCoupon);

                // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
                topCoupon.addEventListener('click', function() {
                    const couponId = this.getAttribute('data-coupon-id');
                    scrollToCoupon(couponId);
                });
            }
        });
    }

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫—É–ø–æ–Ω–æ–≤
    function applyFilters(type, category, searchTerm = '') {
        const couponElements = document.querySelectorAll('.coupon-card');
        couponElements.forEach(card => {
            const cardType = card.getAttribute('data-type');
            const cardCategory = card.getAttribute('data-category');

            // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞
            const businessName = card.querySelector('.coupon-business').textContent.toLowerCase();
            const title = card.querySelector('.coupon-title').textContent.toLowerCase();
            const description = card.querySelector('.coupon-description').textContent.toLowerCase();

            let show = true;

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞
            if (type !== 'all' && cardType !== type) {
                show = false;
            }

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            if (category !== 'all' && cardCategory !== category) {
                show = false;
            }

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∏—Å–∫–∞
            if (searchTerm) {
                const matchesSearch = businessName.includes(searchTerm) || 
                                    title.includes(searchTerm) || 
                                    description.includes(searchTerm);
                show = show && matchesSearch;
            }

            // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ/—Å–∫—Ä—ã—Ç–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
            card.style.display = show ? 'block' : 'none';
        });
    }

    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –∫—É–ø–æ–Ω—É
    function scrollToCoupon(couponId) {
        const couponCard = document.querySelector(`.coupon-card[data-coupon-id="${couponId}"]`);
        if (couponCard) {
            // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –∫–∞—Ä—Ç–æ—á–∫–µ
            couponCard.scrollIntoView({ behavior: 'smooth', block: 'center' });
            // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –Ω–∞ 2 —Å–µ–∫—É–Ω–¥—ã
            couponCard.style.boxShadow = '0 0 0 3px #0d4a9e';
            setTimeout(() => {
                couponCard.style.boxShadow = '';
            }, 2000);
        }
    }

    // –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –∫—É–ø–æ–Ω–æ–º
    function showCouponModal(couponId) {
        const coupon = storage.getCoupons().find(c => c.id === couponId);
        const business = storage.getBusinesses().find(b => b.id === coupon.businessId);
        
        if (!coupon || !business) return;
        
        // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∏–ª–∏ –∫—É–ø–æ–Ω–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        const couponStyle = coupon.couponStyle || {
            backgroundColor: '#fff8e6',
            borderColor: '#ffd166',
            borderStyle: 'dashed',
            borderWidth: '2px'
        };
        
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∫—É–ø–æ–Ω–æ–º –∏ QR-–∫–æ–¥–æ–º
        const modal = document.createElement('div');
        modal.className = 'coupon-modal';
        
        modal.innerHTML = `
            <div class="coupon-modal-content">
                <h3 class="coupon-modal-title">–ö—É–ø–æ–Ω –æ—Ç ${business.name}</h3>
                <div class="coupon-modal-discount" style="
                    background-color: ${couponStyle.backgroundColor};
                    border: ${couponStyle.borderWidth} ${couponStyle.borderStyle} ${couponStyle.borderColor};
                    border-radius: 10px;
                ">
                    <div class="coupon-modal-discount-value">${coupon.discount}</div>
                    <div>–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: –¥–æ ${formatDate(coupon.expiry)}</div>
                </div>
                <div class="coupon-modal-qr">
                    <div class="coupon-modal-qr-code">QR-–∫–æ–¥</div>
                </div>
                <p class="coupon-modal-instruction">–ü–æ–∫–∞–∂–∏—Ç–µ —ç—Ç–æ—Ç QR-–∫–æ–¥ –≤ –∑–∞–≤–µ–¥–µ–Ω–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏</p>
                <div class="coupon-modal-actions">
                    <button class="btn-save-image" data-id="${coupon.id}">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</button>
                    <button class="btn-close">–ó–∞–∫—Ä—ã—Ç—å</button>
                </div>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        modal.querySelector('.btn-close').addEventListener('click', function() {
            document.body.removeChild(modal);
        });
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        modal.querySelector('.btn-save-image').addEventListener('click', function() {
            saveCouponAsImage(couponId);
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        modal.addEventListener('click', function(e) {
            if (e.target === modal) {
                document.body.removeChild(modal);
            }
        });
    }
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫—É–ø–æ–Ω–∞ –∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    function saveCouponAsImage(couponId) {
        const coupon = storage.getCoupons().find(c => c.id === couponId);
        const business = storage.getBusinesses().find(b => b.id === coupon.businessId);
        
        if (!coupon || !business) return;
        
        // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∏–ª–∏ –∫—É–ø–æ–Ω–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        const couponStyle = coupon.couponStyle || {
            backgroundColor: '#fff8e6',
            borderColor: '#ffd166',
            borderStyle: 'dashed',
            borderWidth: '2px'
        };
        
        // –°–æ–∑–¥–∞–µ–º canvas –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const canvas = document.createElement('canvas');
        const ctx = canvas.getContext('2d');
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã (1200x630 - —Å—Ç–∞–Ω–¥–∞—Ä—Ç –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π)
        canvas.width = 1200;
        canvas.height = 630;
        
        // –ó–∞–ª–∏–≤–∞–µ–º —Ñ–æ–Ω
        const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);
        gradient.addColorStop(0, '#1a6ed9');
        gradient.addColorStop(1, '#0d4a9e');
        ctx.fillStyle = gradient;
        ctx.fillRect(0, 0, canvas.width, canvas.height);
        
        // –†–∏—Å—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        ctx.fillStyle = 'white';
        ctx.font = 'bold 48px Arial';
        ctx.textAlign = 'center';
        ctx.fillText('–°–ª–æ–Ω–∏–º –°–∫–∏–¥–∫–∏', canvas.width/2, 80);
        
        // –†–∏—Å—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –±–∏–∑–Ω–µ—Å–∞
        ctx.font = 'bold 36px Arial';
        ctx.fillText(business.name, canvas.width/2, 150);
        
        // –†–∏—Å—É–µ–º —Å–∫–∏–¥–∫—É —Å —É—á–µ—Ç–æ–º —Å—Ç–∏–ª–µ–π
        ctx.fillStyle = couponStyle.borderColor; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–≤–µ—Ç —Ä–∞–º–∫–∏ –∫–∞–∫ —Ü–≤–µ—Ç —Å–∫–∏–¥–∫–∏
        ctx.font = 'bold 72px Arial';
        ctx.fillText(coupon.discount, canvas.width/2, 250);
        
        // –†–∏—Å—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
        ctx.fillStyle = 'white';
        ctx.font = '24px Arial';
        wrapText(ctx, coupon.title, canvas.width/2, 320, canvas.width - 100, 35);
        
        // –†–∏—Å—É–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è
        ctx.font = '20px Arial';
        ctx.fillText(`–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: –¥–æ ${formatDate(coupon.expiry)}`, canvas.width/2, canvas.height - 80);
        
        // –†–∏—Å—É–µ–º QR-–∫–æ–¥ (–≤ –≤–∏–¥–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞)
        ctx.fillStyle = 'white';
        ctx.fillRect(canvas.width/2 - 75, canvas.height - 200, 150, 150);
        ctx.fillStyle = '#0d4a9e';
        ctx.font = 'bold 16px Arial';
        ctx.fillText('QR-–∫–æ–¥', canvas.width/2, canvas.height - 120);
        
        // –†–∏—Å—É–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
        ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';
        ctx.font = '18px Arial';
        ctx.fillText('–ü–æ–∫–∞–∂–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –∑–∞–≤–µ–¥–µ–Ω–∏–∏', canvas.width/2, canvas.height - 30);
        
        // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        const link = document.createElement('a');
        link.download = `coupon-${business.name.replace(/\s+/g, '-')}-${couponId}.png`;
        link.href = canvas.toDataURL('image/png');
        link.click();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        showNotification('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫—É–ø–æ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!', 'success');
    }
    
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ —Ç–µ–∫—Å—Ç–∞
    function wrapText(ctx, text, x, y, maxWidth, lineHeight) {
        const words = text.split(' ');
        let line = '';
        let lineHeightPx = lineHeight;
        let currentY = y;
        
        for (let n = 0; n < words.length; n++) {
            const testLine = line + words[n] + ' ';
            const metrics = ctx.measureText(testLine);
            const testWidth = metrics.width;
            
            if (testWidth > maxWidth && n > 0) {
                ctx.fillText(line, x, currentY);
                line = words[n] + ' ';
                currentY += lineHeightPx;
            } else {
                line = testLine;
            }
        }
        
        ctx.fillText(line, x, currentY);
    }
    
    // –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    function showNotification(message, type = 'info') {
        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const existing = document.querySelector('.notification');
        if (existing) {
            existing.remove();
        }
        
        const notification = document.createElement('div');
        notification.className = `notification ${type}`;
        notification.textContent = message;
        document.body.appendChild(notification);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            notification.style.opacity = '1';
            notification.style.transform = 'translateY(0)';
        }, 10);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
        setTimeout(() => {
            notification.style.opacity = '0';
            notification.style.transform = 'translateY(-20px)';
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 300);
        }, 3000);
    }

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
    function formatDate(dateString) {
        const date = new Date(dateString);
        return date.toLocaleDateString('ru-RU', {
            day: '2-digit',
            month: '2-digit',
            year: 'numeric'
        });
    }
});